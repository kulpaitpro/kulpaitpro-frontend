{"version":3,"sources":["config/index.js","components/Header.js","components/Menu.js","components/Banner.js","components/PortfolioGallery.js","components/ContactForm.js","components/Cms.js","components/Contact.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["serverAddress","memo","useState","apiData","setApiData","useEffect","axios","get","then","response","data","id","className","map","el","i","key","name","href","src","activeLink","setActiveLink","Fragment","undefined","onClick","handleActiveLink","dangerouslySetInnerHTML","__html","content","style","backgroundImage","attachments","description","imageSrc","thumbnails","large","url","alt","useForm","register","handleSubmit","errors","isValid","formState","isMsgSent","setIsMsgSent","isServerErr","setServerErr","captcha","setCaptcha","role","onSubmit","post","setTimeout","catch","error","console","log","ref","required","type","placeholder","data-rule","data-msg","rows","defaultValue","email","subject","message","onChange","value","sitekey","cursor","Contact","App","Boolean","window","location","hostname","match","combineReducers","posts","state","action","pagination","payload","default","home","slice","slider","blog","showLoader","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb407244.chunk.js","sourcesContent":["export const serverAddress = 'https://airtable-proxy-server.herokuapp.com/';\n// export const serverAddress = 'http://localhost:5000/';","import React, {useState, memo, useEffect} from 'react';\nimport axios from 'axios';\nimport {serverAddress} from '../config';\n\nconst Header = () => {\n\n  const[apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${serverAddress}header`)\n    .then(response => setApiData(response.data));\n  }, [])\n    \n  return (\n    <section id=\"topbar\" className=\"d-none d-lg-block\">\n      <div className=\"container clearfix\">\n        <div className=\"contact-info float-left\">\n          {apiData && apiData.map((el, i) => {\n            return <span key={i}>\n            {el.name === 'contact' ? \n            <>\n              <i className=\"fa fa-envelope-o\" />\n              <a href=\"mailto:contact@example.com\">{el.src}</a>\n            </> : \n            <><i className=\"fa fa-phone\"></i>{el.src}</>}\n            </span>\n          })}\n    </div>\n        <div className=\"social-links float-right\">\n          <a href=\"#\" className=\"twitter\"><i className=\"fa fa-twitter\" /></a>\n          <a href=\"#\" className=\"facebook\"><i className=\"fa fa-facebook\" /></a>\n          <a href=\"#\" className=\"instagram\"><i className=\"fa fa-instagram\" /></a>\n          <a href=\"#\" className=\"google-plus\"><i className=\"fa fa-google-plus\" /></a>\n          <a href=\"#\" className=\"linkedin\"><i className=\"fa fa-linkedin\" /></a>\n        </div>\n      </div>\n    </section>\n\n  )\n}\n\nexport default memo(Header)\n","import React, { useState, memo, useEffect } from 'react';\nimport axios from 'axios';\nimport { serverAddress } from '../config';\n\nconst Menu = () => {\n  //  TPDO: add slugs to menu\n  const [apiData, setApiData] = useState([]);\n  const [activeLink, setActiveLink] = useState(0);;\n\n  const handleActiveLink = (i) => {\n    setActiveLink(i);\n  }\n\n  useEffect(() => {\n    axios.get(`${serverAddress}menu`)\n      .then(response => setApiData(response.data));\n  }, []);\n\n  return (\n    <header id=\"header\">\n      <div className=\"container\">\n        <div id=\"logo\" className=\"pull-left\">\n          <h1><a href=\"#body\" className=\"scrollto\">Kulpa<span>ItPro</span></a></h1>\n          {/* <a href=\"#body\"><img src={process.env.PUBLIC_URL + \"img/logo.png\"} alt=\"logo\"/></a> */}\n        </div>\n        <nav id=\"nav-menu-container\">\n          <ul className=\"nav-menu\">\n            {apiData && apiData.map((el, i) => {\n              return <React.Fragment key={i}>\n                <li \n                className={activeLink === i ? 'menu-active' : undefined}\n                onClick={() => handleActiveLink(i)}\n                >\n                  <a href=\"#body\">{el.name}\n                  </a>\n                </li>\n              </React.Fragment>\n            })}\n          </ul>\n        </nav>\n      </div>\n    </header>\n\n  )\n}\n\nexport default memo(Menu);\n","import React, { useState, memo, useEffect } from 'react';\nimport axios from 'axios';\nimport { serverAddress } from '../config';\n\nconst Banner = () => {\n\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${serverAddress}baner`)\n      .then(response => setApiData(response.data));\n  }, []);\n\n  return (\n    <section id=\"intro\">\n      <div className=\"intro-content\">\n      <div className=\"content\" dangerouslySetInnerHTML={{__html: apiData && apiData[0] && apiData[0].content}}></div>\n        <div>\n          <a href=\"#about\" className=\"btn-get-started scrollto\">Zacznij z Nami</a>\n          <a href=\"#portfolio\" className=\"btn-projects scrollto\">Nasze projekty</a>\n        </div>\n      </div>\n      <div id=\"intro-carousel\" className=\"owl-carousel\">\n        <div className=\"item\" style={{ backgroundImage: 'url(\"img/intro-carousel/1.jpg\")' }} />\n        <div className=\"item\" style={{ backgroundImage: 'url(\"img/intro-carousel/2.jpg\")' }} />\n        <div className=\"item\" style={{ backgroundImage: 'url(\"img/intro-carousel/3.jpg\")' }} />\n        <div className=\"item\" style={{ backgroundImage: 'url(\"img/intro-carousel/4.jpg\")' }} />\n        <div className=\"item\" style={{ backgroundImage: 'url(\"img/intro-carousel/5.jpg\")' }} />\n      </div>\n    </section>\n  )\n}\n\nexport default memo(Banner);\n","import React, { useState, memo, useEffect } from 'react';\nimport axios from 'axios';\nimport { serverAddress } from '../config';\n\nconst PortfolioGallery = () => {\n\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${serverAddress}portfolio-gallery`)\n      .then(response => setApiData(response.data));\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row no-gutters\">\n        {apiData && apiData.map((el, i) => {\n          const{attachments = [], description} = el || {};\n          const imageSrc = attachments && attachments[0].thumbnails.large.url;\n          return <div key={i} className=\"col-lg-3 col-md-4\">\n            <div className=\"portfolio-item wow fadeInUp\">\n              <a href={imageSrc} className=\"portfolio-popup\">\n                <img src={imageSrc} alt=\"portfolio image\" />\n                <div className=\"portfolio-overlay\">\n                  <div className=\"portfolio-info\">\n                    <h2 className=\"wow fadeInUp\">{description}</h2>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n\n        })}\n      </div>\n    </div>\n\n\n  )\n}\n\nexport default memo(PortfolioGallery);\n","import React, { memo, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { serverAddress } from '../config';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst ContactForm = () => {\n\n  const { register, handleSubmit, errors, formState } = useForm();\n  const { isValid } = formState;\n  const [isMsgSent, setIsMsgSent] = useState(false);\n  const [isServerErr, setServerErr] = useState(false);\n  const [captcha, setCaptcha] = useState(null);\n\n  function onChange(value) {\n    setCaptcha(value);\n  }\n  const onSubmit = data => {\n    if(captcha !== null) {\n    axios.post(`${serverAddress}contactform`, data)\n      .then(response => {\n        setIsMsgSent(true);\n        setTimeout(() => setIsMsgSent(false), 5000);\n      })\n      .catch((error) => {\n        console.log(error);\n        setServerErr(true);\n        setTimeout(() => setServerErr(false), 5000);\n      });\n    }\n  };\n  return (\n    <div className=\"container\" id=\"contact-form\">\n      <div className=\"form\">\n        <div id=\"sendmessage\">Your message has been sent. Thank you!</div>\n        <form role=\"form\" className=\"contactForm\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <input ref={register({ required: true })} type=\"text\" name=\"name\" className=\"form-control\" id=\"name\" placeholder=\"Imię\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 4 chars\" />\n              <div className=\"validation\" />\n            </div>\n            <div className=\"form-group col-md-6\">\n              <input ref={register({ required: true,  })} type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\"  />\n              <div className=\"validation\" />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input ref={register({ required: true })} type=\"text\" className=\"form-control\" name=\"subject\" id=\"subject\" placeholder=\"Temat\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 8 chars of subject\" />\n            <div className=\"validation\" />\n          </div>\n          <div className=\"form-group\">\n            <textarea ref={register({ required: true })} className=\"form-control\" name=\"message\" rows={5} data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Wiadomość\" defaultValue={\"\"} />\n            <div className=\"validation\" />\n          </div>\n          {errors.name &&\n            <div className=\"alert alert-danger\" role=\"alert\">Pole Imię jest wymagane </div>}\n          {errors.email &&\n            <div className=\"alert alert-danger\" role=\"alert\">Pole Email jest wymagane </div>}\n          {errors.subject &&\n            <div className=\"alert alert-danger\" role=\"alert\">Pole Temat jest wymagane </div>}\n          {errors.message &&\n            <div className=\"alert alert-danger\" role=\"alert\">Pole Wiadomość jest wymagane </div>}\n          {isMsgSent &&\n            <div className=\"alert alert-success\" role=\"alert\">Wiadomość została wysłana</div>}\n          {isServerErr &&\n            <div className=\"alert alert-danger\" role=\"alert\">Przepraszamy.Wiadomość nie została wysłana. Spróbuj ponownie później</div>}\n          <div className=\"text-center\">\n            <ReCAPTCHA\n              onChange={onChange}\n              sitekey=\"6LfTLP8UAAAAAHHruZcSLWZaNFbBTDjk4fMRl-y1\"\n            />\n            <button style={!isValid || captcha === null ? { cursor: 'not-allowed' } : { cursor: 'default' }} type=\"submit\">Send Message</button></div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(ContactForm); \n","import React, { useState, memo, useEffect } from 'react';\nimport axios from 'axios';\nimport { serverAddress } from '../config';\nimport PortfolioGallery from './PortfolioGallery';\nimport ContactForm from './ContactForm';\n\nconst Cms = () => {\n\n  const [apiData, setApiData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${serverAddress}cms`)\n      .then(response => setApiData(response.data));\n  }, []);\n\n  return (\n    <main id=\"main\">\n      <div dangerouslySetInnerHTML={{ __html: apiData && apiData[0] && apiData[0].content }}></div>\n      <div dangerouslySetInnerHTML={{ __html: apiData && apiData[1] && apiData[1].content }}></div>\n      <div dangerouslySetInnerHTML={{ __html: apiData && apiData[2] && apiData[2].content }}></div>\n      <section id=\"portfolio\" className=\"wow fadeInUp\">\n        <div dangerouslySetInnerHTML={{ __html: apiData && apiData[3] && apiData[3].content }}></div>\n        <PortfolioGallery />\n      </section>\n      <div dangerouslySetInnerHTML={{ __html: apiData && apiData[4] && apiData[4].content }}></div>\n      <section id=\"contact\" className=\"wow fadeInUp\">\n        <div dangerouslySetInnerHTML={{ __html: apiData && apiData[5] && apiData[5].content }}></div>\n        <ContactForm />\n      </section>\n    </main>\n\n  )\n}\n\nexport default memo(Cms);\n","import React from 'react'\n\nexport const Contact = () => {\n  return (\n    <footer id=\"footer\">\n      <div className=\"container\">\n        <div className=\"copyright\">\n          © Copyright <strong>Reveal</strong>. All Rights Reserved\n    </div>\n        <div className=\"credits\">\n          {/*\n    All the links in the footer should remain intact.\n    You can delete the links only if you purchased the pro version.\n    Licensing information: https://bootstrapmade.com/license/\n    Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/buy/?theme=Reveal\n  */}\n      Designed by <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\n        </div>\n      </div>\n    </footer>\n\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport Banner from './components/Banner';\nimport Cms from './components/Cms';\nimport { Contact } from './components/Contact';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Menu />\n      <Banner />\n      <Cms />\n      <Contact />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst postsReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'FETCH_POSTS':\n      return {\n        pagination: action.payload.pagination,\n        default: action.payload.posts,\n        home: action.payload.posts.slice(0, 6),\n        slider: action.payload.posts.slice(0, 3),\n        blog: action.payload.posts\n      };\n    default:\n      return state\n  }\n};\n\nconst showLoaderReducer = (state = 'none', action) => {\n  switch(action.type) {\n    case 'SHOW_LOADER':\n      return action.payload;\n    default:\n      return state\n  }\n};\n\n// register reducers\nexport default combineReducers({\n  posts: postsReducer,\n  showLoader: showLoaderReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}